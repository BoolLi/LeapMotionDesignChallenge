import Tkinter
from Tkinter import *
from infix2postfix import *
import numpy as np

RESOLUTION = 30

class Demo(Tkinter.Tk):
    def __init__(self):
        # A bunch of parameters

        self.function = ""
        self.lower_x = 0
        self.lower_y = 0
        self.upper_x = 0
        self.upper_y = 0

        # Buttons
        
        Tkinter.Tk.__init__(self)

	root.wm_title("Embedding in TK")

	f = Figure(figsize=(5, 4), dpi=100)
	a = f.add_subplot(111)
	t = arange(0.0, 3.0, 0.01)
	s = sin(2*pi*t)

	a.plot(t, s)

        self.geometry('800x800')
        self.entry1 = Tkinter.Entry(self)
        self.entry2 = Tkinter.Entry(self)
        self.entry3 = Tkinter.Entry(self)
        self.button1 = Tkinter.Button(self, text="Get Function", command=self.get_function, anchor=W, padx=8)
        self.button2 = Tkinter.Button(self, text="Get Color", command=self.get_color,anchor=W, padx=8)
        self.button3 = Tkinter.Button(self, text="Get Speed", command=self.get_speed,anchor=W, padx=8)
        self.label1 = Tkinter.Label(self, text="Function")
        self.label2 = Tkinter.Label(self, text="Color")
        self.label3 = Tkinter.Label(self, text="Speed")


 #       self.entry2 = Menubutton
        
        self.label1.grid(row=0,column=1)
        self.button1.grid(row=0,column=3)
        self.entry1.grid(row=0,column=2)

        self.label2.grid(row=1,column=1)
        self.button2.grid(row=1,column=3)
        self.entry2.grid(row=1,column=2)
        

        self.label3.grid(row=2,column=1)
        self.button3.grid(row=2,column=3)
        self.entry3.grid(row=2,column=2)

        self.button4 = Tkinter.Button(self, text="Upper X", command=self.get_upper_x, anchor=W, padx=7)

        self.button5 = Tkinter.Button(self, text="Lower X", command=self.get_lower_x, anchor=W, padx=7)
        self.button6 = Tkinter.Button(self, text="Upper Y", command=self.get_upper_y, anchor=W, padx=7)
        self.button7 = Tkinter.Button(self, text="Lower Y", command=self.get_lower_y, anchor=W, padx=7)
        self.button8 = Tkinter.Button(self, text="Plot data", command=self.plotData, anchor=W, padx=7)


        self.entry4 = Tkinter.Entry(self)
        self.entry5 = Tkinter.Entry(self)
        self.entry6 = Tkinter.Entry(self)
        self.entry7 = Tkinter.Entry(self)

 #       self.label3.grid(row=4,column=1)
        self.button4.grid(row=4,column=3)
        self.entry4.grid(row=4,column=2)

 #       self.label3.grid(row=2,column=1)
        self.button5.grid(row=4,column=5)
        self.entry5.grid(row=4,column=4)
        
 #       self.label3.grid(row=2,column=1)
        self.button6.grid(row=5,column=3)
        self.entry6.grid(row=5,column=2)

 #       self.label3.grid(row=2,column=1)
        self.button7.grid(row=5,column=5)
        self.entry7.grid(row=5,column=4)

        self.button8.grid(row=6,column=5)


    def get_function(self):
        return self.entry1.get()


    def get_color(self):
        return self.entry2.get()


    def get_upper_x(self):
        return self.entry4.get()

    def get_lower_x(self):
        return self.entry5.get()

    def get_upper_y(self):
        return self.entry6.get()

    def get_lower_y(self):
        return self.entry7.get()

    def get_speed(self):
        return self.entry3.get()

    def plotData(self):
        infix = self.get_function()
        endX = float(self.get_upper_x())
        beginX = float(self.get_lower_x())
        endY = float(self.get_upper_y())
        beginY = float(self.get_lower_y())

        X = np.linspace(beginX, endX, RESOLUTION)
        Y = np.linspace(beginY, endY, RESOLUTION)
        Z = np.zeros((RESOLUTION,RESOLUTION))

        postfix = translate( infix )
        
        for i in range(RESOLUTION):
            for j in range(RESOLUTION):
                Z[i][j] = transfer_to_postfix( postfix, X[i], Y[j] )

        X,Y = np.meshgrid(X,Y)

        fig = plt.figure()
        ax = fig.add_subplot(111, projection='3d')
        ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap = "Oranges_r", linewidth=0, antialiased=True)
        plt.show()
    
app = Demo()
app.mainloop()
